// <auto-generated />
using System;
using DMS.CORE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMS.CORE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230630091617_fix_mdpartner")]
    partial class fix_mdpartner
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccount", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserName");

                    b.HasIndex("GroupId");

                    b.ToTable("tblAdAccount");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblAdAccountGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroupRight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RightId");

                    b.ToTable("tblAdAccountGroupRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblAdMenu");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdMessage", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("tblAdMessage");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdRight", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblAdRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuCustomerCare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CareContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CareDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("OrderCode");

                    b.HasIndex("PartnerCode");

                    b.ToTable("tblBuCustomerCare");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuItemFormula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Admixture")
                        .HasColumnType("float");

                    b.Property<double?>("Cement")
                        .HasColumnType("float");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Sand")
                        .HasColumnType("float");

                    b.Property<double?>("Stone")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Water")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode")
                        .IsUnique()
                        .HasFilter("[ItemCode] IS NOT NULL");

                    b.ToTable("tblBuItemFormula");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdArea", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdArea");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDepartment", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdDepartment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDevice", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DevicePort")
                        .HasColumnType("int");

                    b.Property<string>("GroupCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IpPort")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Code");

                    b.HasIndex("GroupCode");

                    b.HasIndex("TypeCode");

                    b.ToTable("tblMdDevice");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceGroup", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdDeviceGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdDeviceType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItem", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("CostPrice")
                        .HasColumnType("float");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainObject")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuantitative")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("SellPrice")
                        .HasColumnType("float");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("TypeCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblMdItem");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItemType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdItemType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdMixer", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdMixer");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdOrderType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdOrderType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPartner", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProvider")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdPartner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPourType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdPourType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdStock", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdStock");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdUnit", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdUnit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicle", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Driver")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Tonnage")
                        .HasColumnType("float");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("TypeCode");

                    b.ToTable("tblMdVehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicleType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdVehicleType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoExport", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Debt")
                        .HasColumnType("float");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExportDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PayMoney")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("SumMoney")
                        .HasColumnType("float");

                    b.Property<double?>("TaxVat")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("char(2)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("PartnerCode");

                    b.ToTable("tblSoExport");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoExportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExportCode")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainItem")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Number")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("SumMoney")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ExportCode");

                    b.HasIndex("ItemCode");

                    b.ToTable("tblSoExportDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrder", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExportCode")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MixerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderTypeCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartnerNote")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PourCategory")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("PourDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PourLatitude")
                        .HasColumnType("float");

                    b.Property<string>("PourLocation")
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("PourLongitude")
                        .HasColumnType("float");

                    b.Property<string>("PourTypeCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("AreaCode");

                    b.HasIndex("ExportCode");

                    b.HasIndex("OrderTypeCode");

                    b.HasIndex("PartnerCode");

                    b.HasIndex("PourTypeCode");

                    b.ToTable("tblSoOrder");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainItem")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("OrderNumber")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("ReleaseNumber")
                        .HasColumnType("float");

                    b.Property<string>("SandCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Slump")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoneCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("SumMoney")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("OrderCode");

                    b.HasIndex("SandCode");

                    b.HasIndex("StoneCode");

                    b.ToTable("tblSoOrderDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrevState")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("OrderCode");

                    b.ToTable("tblSoOrderProcess");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderRelease", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MixDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("MixNumber")
                        .HasColumnType("float");

                    b.Property<string>("MixVehicleCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MixerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PumpVehicleCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SealNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("WeightIn")
                        .HasColumnType("float");

                    b.Property<DateTime?>("WeightInTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("WeightOut")
                        .HasColumnType("float");

                    b.Property<DateTime?>("WeightOutTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.HasIndex("MixVehicleCode");

                    b.HasIndex("OrderCode");

                    b.ToTable("tblSoOrderRelease");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderReleaseProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderReleaseCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrevState")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("OrderReleaseCode");

                    b.ToTable("tblSoOrderReleaseProcess");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoScale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Exchange")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("ItemImpurities")
                        .HasColumnType("float");

                    b.Property<double?>("ItemMoney")
                        .HasColumnType("float");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("ItemNumber")
                        .HasColumnType("float");

                    b.Property<double?>("ItemPercentageOfImpurities")
                        .HasColumnType("float");

                    b.Property<double?>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<double?>("ItemProportion")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ScaleTypeCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Seal")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("TimeWeight1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeWeight2")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.Property<double?>("Weight1")
                        .HasColumnType("float");

                    b.Property<double?>("Weight2")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("OrderCode");

                    b.HasIndex("PartnerCode");

                    b.ToTable("tblSoScale");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccount", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccountGroup", "AccountGroup")
                        .WithMany("ListAccount")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("AccountGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroupRight", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccountGroup", "AccountGroup")
                        .WithMany("ListAccountGroupRight")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.tblAdRight", "Right")
                        .WithMany("ListAccountGroupRight")
                        .HasForeignKey("RightId");

                    b.Navigation("AccountGroup");

                    b.Navigation("Right");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuCustomerCare", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("CustomerCares")
                        .HasForeignKey("OrderCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany("CustomerCares")
                        .HasForeignKey("PartnerCode");

                    b.Navigation("Order");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuItemFormula", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithOne("ItemFormula")
                        .HasForeignKey("DMS.CORE.Entities.BU.tblBuItemFormula", "ItemCode");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDevice", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdDeviceGroup", "Group")
                        .WithMany("ListDevice")
                        .HasForeignKey("GroupCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdDeviceType", "Type")
                        .WithMany("ListDevice")
                        .HasForeignKey("TypeCode");

                    b.Navigation("Group");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItem", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItemType", "ItemType")
                        .WithMany("ListItem")
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany("ListItem")
                        .HasForeignKey("UnitCode")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("ItemType");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicle", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdVehicleType", "VehicleType")
                        .WithMany("ListVehicle")
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoExport", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany("Exports")
                        .HasForeignKey("PartnerCode");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoExportDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoExport", "Export")
                        .WithMany("ExportDetails")
                        .HasForeignKey("ExportCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany("ExportDetails")
                        .HasForeignKey("ItemCode");

                    b.Navigation("Export");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrder", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany("Orders")
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoExport", "Export")
                        .WithMany("Orders")
                        .HasForeignKey("ExportCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdOrderType", "OrderType")
                        .WithMany("Orders")
                        .HasForeignKey("OrderTypeCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany("Orders")
                        .HasForeignKey("PartnerCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourType", "PourType")
                        .WithMany("Orders")
                        .HasForeignKey("PourTypeCode");

                    b.Navigation("Area");

                    b.Navigation("Export");

                    b.Navigation("OrderType");

                    b.Navigation("Partner");

                    b.Navigation("PourType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Sand")
                        .WithMany()
                        .HasForeignKey("SandCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Stone")
                        .WithMany()
                        .HasForeignKey("StoneCode");

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("Sand");

                    b.Navigation("Stone");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderProcess", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("OrderProcesses")
                        .HasForeignKey("OrderCode");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderRelease", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdVehicle", "Vehicle")
                        .WithMany("OrderReleases")
                        .HasForeignKey("MixVehicleCode");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("OrderReleases")
                        .HasForeignKey("OrderCode");

                    b.Navigation("Order");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderReleaseProcess", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrderRelease", "OrderRelease")
                        .WithMany("ReleaseProcesses")
                        .HasForeignKey("OrderReleaseCode");

                    b.Navigation("OrderRelease");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoScale", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany("Scales")
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("Scales")
                        .HasForeignKey("OrderCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany("Scales")
                        .HasForeignKey("PartnerCode");

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroup", b =>
                {
                    b.Navigation("ListAccount");

                    b.Navigation("ListAccountGroupRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdRight", b =>
                {
                    b.Navigation("ListAccountGroupRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdArea", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceGroup", b =>
                {
                    b.Navigation("ListDevice");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceType", b =>
                {
                    b.Navigation("ListDevice");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItem", b =>
                {
                    b.Navigation("ExportDetails");

                    b.Navigation("ItemFormula");

                    b.Navigation("OrderDetails");

                    b.Navigation("Scales");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItemType", b =>
                {
                    b.Navigation("ListItem");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdOrderType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPartner", b =>
                {
                    b.Navigation("CustomerCares");

                    b.Navigation("Exports");

                    b.Navigation("Orders");

                    b.Navigation("Scales");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPourType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdUnit", b =>
                {
                    b.Navigation("ListItem");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicle", b =>
                {
                    b.Navigation("OrderReleases");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicleType", b =>
                {
                    b.Navigation("ListVehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoExport", b =>
                {
                    b.Navigation("ExportDetails");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrder", b =>
                {
                    b.Navigation("CustomerCares");

                    b.Navigation("OrderDetails");

                    b.Navigation("OrderProcesses");

                    b.Navigation("OrderReleases");

                    b.Navigation("Scales");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderRelease", b =>
                {
                    b.Navigation("ReleaseProcesses");
                });
#pragma warning restore 612, 618
        }
    }
}
